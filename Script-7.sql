INSERT INTO BOOK_PRODUCT VALUES (1, 'TEST1', 0.1, 0, NULL, 'TEST1', NULL);
INSERT INTO BOOK_PRODUCT VALUES (2, 'TEST2', 0.2, 0, NULL, 'TEST2', NULL);

SELECT * FROM BOOK_PRODUCT;

INSERT INTO ROLE VALUES (1, '관리자');
INSERT INTO ROLE VALUES (2, '회원');

SELECT * FROM ROLE;

INSERT INTO MEMBER VALUES('TEST1', 'TEST1', 'TEST1', 'TEST1', 'TEST1', 'TEST1');
INSERT INTO MEMBER VALUES('TEST2', 'TEST2', 'TEST2', 'TEST2', 'TEST2', 'TEST2');

SELECT * FROM MEMBER;

--회원의 정보와 역할 출력
INSERT INTO MEMBER_ROLE VALUES(1, 'TEST1');
INSERT INTO MEMBER_ROLE VALUES(2, 'TEST2');

SELECT * FROM MEMBER MEM
INNER JOIN MEMBER_ROLE MEM_R
ON (MEM.MEMBER_ID = MEM_R.MEMBER_ID)
RIGHT JOIN ROLE R 
ON (MEM_R.ROLE_NUM = R.ROLE_NUM);

INSERT INTO BANK_BOOK(ACCOUNT_NUM, MEMBER_ID, ACCOUNT_PW, PRODUCT_ID, NAME, ACCOUNT_OPEN_DATE, ACCOUNT_EXTRIA) VALUES (101, 'TEST1', '1234', 1, 'TEST1', SYSDATE, 0);
INSERT INTO BANK_BOOK(ACCOUNT_NUM, MEMBER_ID, ACCOUNT_PW, PRODUCT_ID, NAME, ACCOUNT_OPEN_DATE, ACCOUNT_EXTRIA) VALUES (102, 'TEST2', '1234', 2, 'TEST2', SYSDATE, 0);

SELECT * FROM BANK_BOOK;

-- TEST1 이 가입한 계좌번호, 통장 이름, 잔액, 이자율 출력 --ACCOUNT_NUM, PRODUCT_ID, ACCOUNT_EXTRIA, PRODUCT_INTERTEST
SELECT *
FROM BANK_BOOK bb 
INNER JOIN BOOK_PRODUCT bp 
ON (bb.PRODUCT_ID = bp.PRODUCT_ID)
WHERE bb.NAME = 'TEST1';

-- 특정 상품에 가입한 총 회원수



-- 특정 상품의 총 금액

-- 각 계좌별로 입금 > 출금 > 입금 > 출금 순서대로 정보 입력

-- 특정 회원의 특정 계좌로 입금과 출금이 날짜순으로 출력

-- 특정 회원의 특정 계좌 입금만 날짜 순 출력

-- 특정 회원의 특정 계좌 출금만 날짜 순 출력

-- 특정 회원의 가입한 계좌번호 상품명 이자율과 총 잔액 / 특정 상품의 총 금액

