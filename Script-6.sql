--------- 테이블 생성

CREATE TABLE MEMBER01(
	MEMBER_ID VARCHAR2(100),
	MEMBER_PW VARCHAR2(100),
	MEMBER_NAME VARCHAR2(20),
	MEMBER_PHONE VARCHAR2(50),
	MEMBER_EMAIL VARCHAR2(100),
	MEMBER_JUMIN VARCHAR2(100)
)

CREATE TABLE PRODUCT01(
	PRODUCT_NUM NUMBER,
	PRODUCT_INTEREST NUMBER(2,1),
	PRODUCT_NAME VARCHAR2(500),
	PRODUCT_DETAIL CLOB,
	PRODUCT_SELL VARCHAR2(50),
	MEMBER_ID VARCHAR2(100)
);

CREATE TABLE PRODUCT_INFO(
	INFO_ACCOUNT NUMBER,
	INFO_BALANCE NUMBER,
	INFO_OPENING VARCHAR2(200),
	PRODUCT_NUM NUMBER,
	MEMBER_ID VARCHAR2(100)
);

CREATE TABLE ACCOUNT_SELECT(
	SELECT_DATE DATE,
	INFO_ACCOUNT NUMBER,
	PRODUCT_NUM NUMBER,
	MEMBER_ID VARCHAR2(100),
	ISELECT_INPUT NUMBER,
	SELECT_OUTPUT NUMBER
);

CREATE TABLE ROLE(
	ROLE_NUM NUMBER,
	ROLE_NAME VARCHAR2(200)
);

CREATE TABLE MEMBER_ROLE(
	ROLE_NUM NUMBER,
	MEMBER_ID VARCHAR2(100)
);

--------- 제약조건 적용

------------------------------ MEMBER TABLE

ALTER TABLE MEMBER01 ADD CONSTRAINT MEMBER_ID_PK PRIMARY KEY (MEMBER_ID);
ALTER TABLE MEMBER01 MODIFY MEMBER_PW CONSTRAINT MEMBER_PW_NN NOT NULL;
ALTER TABLE MEMBER01 MODIFY MEMBER_NAME CONSTRAINT MEMBER_NAME_NN NOT NULL;
ALTER TABLE MEMBER01 ADD CONSTRAINT MEMBER_JUMIN_U UNIQUE (MEMBER_JUMIN);

------------------------------ PRODUCT TABLE
 
ALTER TABLE PRODUCT01 ADD CONSTRAINT PRODUCT01_NUM_PK PRIMARY KEY (PRODUCT_NUM);
ALTER TABLE PRODUCT01 MODIFY PRODUCT_INTEREST CONSTRAINT PRODUCT01_INTEREST_NN NOT NULL;
ALTER TABLE PRODUCT01 MODIFY PRODUCT_NAME CONSTRAINT PRODUCT01_NAME_NN NOT NULL;
ALTER TABLE PRODUCT01 ADD CONSTRAINT PRODUCT01_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER01 (MEMBER_ID);

------------------------------ PRODUCT_INFO TABLE

ALTER TABLE PRODUCT_INFO ADD CONSTRAINT INFO_ACCOUNT_PK PRIMARY KEY (INFO_ACCOUNT);
ALTER TABLE PRODUCT_INFO MODIFY INFO_BALANCE CONSTRAINT INFO_BALANCE_NN NOT NULL;
ALTER TABLE PRODUCT_INFO ADD CONSTRAINT PRODUCT_INFO_PRODUCT_NUM_FK FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT01 (PRODUCT_NUM);
ALTER TABLE PRODUCT_INFO ADD CONSTRAINT PRODUCT_INFO_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER01 (MEMBER_ID);

------------------------------ ACCOUNT_SELET TABLE

ALTER TABLE ACCOUNT_SELECT ADD CONSTRAINT SELECT_DATE_PK PRIMARY KEY (SELECT_DATE);
ALTER TABLE ACCOUNT_SELECT ADD CONSTRAINT INFO_ACCOUNT_FK FOREIGN KEY (INFO_ACCOUNT) REFERENCES PRODUCT_INFO (INFO_ACCOUNT);
ALTER TABLE ACCOUNT_SELECT ADD CONSTRAINT PRODUCT_NUM_FK FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT01 (PRODUCT_NUM);
ALTER TABLE ACCOUNT_SELECT ADD CONSTRAINT ACCOUNT_SELECT_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER01 (MEMBER_ID);
ALTER TABLE ACCOUNT_SELECT MODIFY ISELECT_INPUT CONSTRAINT ISELECT_INPUT_NN NOT NULL;
ALTER TABLE ACCOUNT_SELECT MODIFY SELECT_OUTPUT CONSTRAINT SELECT_OUTPUT_NN NOT NULL;

------------------------------ ROLE TABLE

ALTER TABLE ROLE ADD CONSTRAINT ROLE_NUM_PK PRIMARY KEY (ROLE_NUM);

------------------------------ MEMBER_ROLE TABLE

ALTER TABLE MEMBER_ROLE ADD CONSTRAINT ROLE_NUM_FK FOREIGN KEY (ROLE_NUM) REFERENCES ROLE (ROLE_NUM);
ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MEMBER_ROLE_MEMBER_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER01 (MEMBER_ID);

--------- 테이블 값 삽입 및 제약조건 위배 테스트

------------------------------ MEMBER TABLE

INSERT INTO MEMBER01 VALUES('TEST1', 'TEST1', 'TEST1', NULL, NULL, 'TESTJUMIN');
INSERT INTO MEMBER01 VALUES('TEST1', 'TEST1', 'TEST1', NULL, NULL, 'TESTJUMIN'); -- PK 위배 테스트
INSERT INTO MEMBER01 VALUES('TEST2', 'TEST2', 'TEST2', NULL, NULL, 'TESTJUMIN'); -- UNIQUE 위배 테스트
INSERT INTO MEMBER01 VALUES('TEST2', 'TEST2', 'TEST2', NULL, NULL, 'TESTJUMIN02');
INSERT INTO MEMBER01 VALUES('TEST3', NULL, 'TEST2', NULL, NULL, 'TESTJUMIN02'); -- NOT NULL 위배 테스트
INSERT INTO MEMBER01 VALUES('TEST2', 'TEST2', NULL, NULL, NULL, 'TESTJUMIN02'); -- NOT NULL 위배 테스트
SELECT * FROM MEMBER01;

------------------------------ PRODUCT TABLE

INSERT INTO PRODUCT01 VALUES(1, 1, 'TEST_PRODUCT_NAME', 'TESTDETAIL', 'TEST_SELL', 'TEST1');
INSERT INTO PRODUCT01 VALUES(2, 1, 'TEST_PRODUCT_NAME', 'TESTDETAIL', 'TEST_SELL', 'TEST1');
INSERT INTO PRODUCT01 VALUES(2, 1, 'TEST_PRODUCT_NAME', 'TESTDETAIL', 'TEST_SELL', 'TEST1'); -- PK위배 테스트
INSERT INTO PRODUCT01 VALUES(3, NULL, 'TEST_PRODUCT_NAME', 'TESTDETAIL', 'TEST_SELL', 'TEST1'); -- NOT NULL 위배 테스트
INSERT INTO PRODUCT01 VALUES(3, 1, NULL, 'TESTDETAIL', 'TEST_SELL', 'TEST1'); -- NOT NULL 위배 테스트
INSERT INTO PRODUCT01 VALUES(3, 1, 'TEST_PRODUCT_NAME', 'TESTDETAIL', 'TEST_SELL', 'TEST3'); -- FK 위배 테스트
SELECT * FROM PRODUCT01;

------------------------------ PRODUCT_INFO TABLE

INSERT INTO PRODUCT_INFO VALUES(1, 0, SYSDATE, 1, 'TEST1');
INSERT INTO PRODUCT_INFO VALUES(2, 0, SYSDATE, 1, 'TEST1');
INSERT INTO PRODUCT_INFO VALUES(1, 0, SYSDATE, 1, 'TEST1'); -- PK 위배 테스트
INSERT INTO PRODUCT_INFO VALUES(3, NULL, SYSDATE, 1, 'TEST1'); -- NOT NULL 위배 테스트
INSERT INTO PRODUCT_INFO VALUES(1, 0, SYSDATE, 3, 'TEST1'); -- FK 위배 테스트
INSERT INTO PRODUCT_INFO VALUES(1, 0, SYSDATE, 1, 'TEST3'); -- FK 위배 테스트
SELECT * FROM PRODUCT_INFO;

------------------------------ ACCOUNT_SELECT TABLE

INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010100', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', 1000, 0);
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010105', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', 0, 1000);
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010115', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', 0, 1000);
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010115', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', 0, 1000); -- PK 위배 테스트
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010120', 'YYYY-MM-DD HH24'), 3, 1, 'TEST1', 0, 1000); -- FK 위배 테스트
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010120', 'YYYY-MM-DD HH24'), 1, 3, 'TEST1', 0, 1000); -- FK 위배 테스트
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010120', 'YYYY-MM-DD HH24'), 1, 1, 'TEST3', 0, 1000); -- FK 위배 테스트
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010120', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', NULL, 1000); -- NOT NULL 위배 테스트
INSERT INTO ACCOUNT_SELECT VALUES(TO_DATE('2023010120', 'YYYY-MM-DD HH24'), 1, 1, 'TEST1', 0, NULL); -- NOT NULL 위배 테스트
SELECT * FROM ACCOUNT_SELECT;

------------------------------ ROLE TABLE

INSERT INTO ROLE VALUES (1, '관리자');
INSERT INTO ROLE VALUES (2, '매니저');
INSERT INTO ROLE VALUES (3, '회원');
INSERT INTO ROLE VALUES (1, '추가테스트'); -- PK 위반 테스트
SELECT * FROM ROLE;

------------------------------ MEMBER_ROLE TABLE

INSERT INTO MEMBER_ROLE VALUES (1, 'TEST1');
INSERT INTO MEMBER_ROLE VALUES (2, 'TEST2');
INSERT INTO MEMBER_ROLE VALUES (4, 'TEST2'); -- FK 위반 테스트
INSERT INTO MEMBER_ROLE VALUES (3 ,'TEST3'); -- FK 위반 테스트
SELECT * FROM MEMBER_ROLE;